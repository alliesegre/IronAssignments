1. How many copies of the film Hunchback Impossible exist in the inventory system?
SELECT COUNT(inventory_id) AS tot_copies, film_id 
FROM sakila.inventory
GROUP BY film_id
HAVING film_id IN (
	SELECT film_id FROM sakila.film 
    WHERE title = 'Hunchback Impossible' AND title IS NOT NULL
    );


2 List all films whose length is longer than the average of all the films.
SELECT fi.title, fi.length FROM sakila.film AS fi
GROUP BY title
HAVING length > (
SELECT AVG(length) AS average_length FROM sakila.film)
ORDER BY length DESC;


3. Use subqueries to display all actors who appear in the film Alone Trip.
SELECT CONCAT(first_name, ' ', last_name) as ACTORS
FROM sakila.actor
WHERE actor_id IN
(SELECT actor_id 
FROM film_actor 
WHERE film_id IN
(SELECT film_id FROM sakila.film
where title = 'Alone Trip'
)
);


4. Sales have been lagging among young families, and you wish to target all family movies for a promotion. Identify all movies categorized as family films.
SELECT title
FROM sakila.film
WHERE film_id IN
(SELECT film_id
FROM film_category
WHERE category_id IN
(SELECT category_id FROM sakila.category
where name = 'Family'
)
);

5.Get name and email from customers from Canada using subqueries. Do the same with joins. Note that to create a join, you will have to identify the correct tables with their primary keys and foreign keys, that will help you get the relevant information.
--version 1
SELECT CONCAT(first_name, ' ', last_name) as Canadians, email
FROM sakila.customer
WHERE address_id IN
(SELECT address_id
FROM sakila.address
WHERE city_id IN
(SELECT city_id
FROM sakila.city
WHERE country_id IN
(SELECT country_id FROM sakila.country
where country = 'Canada'
)
)
);

--version 2
SELECT cu.first_name, cu.last_name, cu.email
FROM sakila.country 
JOIN sakila.city USING (country_id)
JOIN sakila.address USING (city_id)
JOIN sakila.customer AS cu USING (address_id)
WHERE country = 'Canada';

6.Which are films starred by the most prolific actor? Most prolific actor is defined as the actor that has acted in the most number of films. First you will have to find the most prolific actor and then use that actor_id to find the different films that he/she starred.
SELECT title
FROM sakila.film
WHERE film_id IN
(SELECT film_id FROM film_actor
WHERE actor_id IN
(select DISTINCT first_value(actor_id) over() AS actor_id from(
select count(*) as film_count, actor_id
from sakila.film_actor
group by actor_id
order by film_count desc) as a1)
);


7. Films rented by most profitable customer. You can use the customer table and payment table to find the most profitable customer ie the customer that has made the largest sum of payments
SELECT title
FROM sakila.film
WHERE film_id IN
(SELECT customer_id, inventory_id
FROM sakila.rental
WHERE customer_id IN
(select DISTINCT first_value(customer_id) over() AS customer_top from(
select customer_id, SUM(amount) AS total_paid
from sakila.payment
order by total_paid desc
) as a1
)
);


8. Customers who spent more than the average payments.

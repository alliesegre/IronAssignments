1. Write a query to print the ID, FIRST_NAME, and LAST_NAMEs of the customers whose combined name length, i.e., the sum of the length of the FIRST_NAME and LAST_NAME, is less than 12. The IDs and names should be printed in the ascending order of the combined name length. If two or more customers have the same combined name length, sort the result in lexicographical order of the full names, ignoring case. If two or more customers have the same full name, sort those results by ID, ascending.

SELECT ID, FIRST_NAME, LAST_NAME, length(FIRST_NAME) + length(LAST_NAME) as LENGTH
FROM dummy_lab_3_4.customer
WHERE length(FIRST_NAME) + length(LAST_NAME) < 12
ORDER BY LENGTH DESC, FIRST_NAME, ID;

- could have used CONCAT (first_name, last_name)
Example with subquery:
SELECT id, first_name, last_name
FROM
(SELECT id, first_name, last_name, LENGTH(CONCAT( first_name, last_name)) AS len_name
FROM customer) sub
WHERE len_name <12
ORDER BY len_name DESC, first_name;

4. Given two tables, Employee and Department, generate a summary of how many employees are in each department. Each department should be listed, whether they currently have any employees or not. The results should be sorted from high to low by number of employees, and then alphabetically by department when departments have the same number of employees. The results should list the department name followed by the employee count. The column names are not tested, so use whatever is appropriate.
STEP 1

SELECT * FROM dummy_lab_3_4.employee AS emp
JOIN dummy_lab_3_4.department AS dep
ON emp.dept_id = dep.id;

STEP 2
SELECT COUNT(emp.id) AS total_employees, dep.name AS department FROM department AS dep
LEFT JOIN dummy_lab_3_4.employee AS emp
ON dep.id = emp.dept_id
GROUP BY dep.id
ORDER BY total_employees DESC, department;

5. There are two data tables with employee information: EMPLOYEE and EMPLOYEE_UIN3. Query the tables to generate a list of all employees who are less than 25 years old first in order of NAME, then of ID, both ascending.  The result should include the UIN followed by the NAME.  

TO merge tables:
SELECT *
FROM
(SELECT id, name, age FROM dummy_lab_3_4.employeeui3
UNION ALL
SELECT id, name, 'Unknown' AS age
FROM dummy_lab_3_4.employee) AS test
WHERE age < 25 AND age <> 'Unknown'
ORDER BY name, id;

Simple:
SELECT emp.name, eu.uin
FROM employee AS emp
JOIN employee_uin3 AS eu
ON emp.id = eu.id
WHERE emp.age > 25
ORDER BY emp.name, emp.id;

8. A company maintains an EMPLOYEE table with information for each of their employees. Write a query to produce a list containing two columns.  The first column should include the name of an employee who earns less than some other employee.  The second column should contain the name of a higher earning employee.  All combinations of lesser and greater earning employees should be included.  Sort ascending, first by the lower earning employee's ID, then by the higher earning employee's SALARY.  

SELECT e1.name, e2.name, 
FROM employee e1
JOIN employee e2
ON e2.id<> e2.id AND e1.salary < e2.salary
ORDER BY e1.name, e2.salary;


SELECT e1.name, e2.name, 
FROM employee e1
JOIN employee e2
ON e2.id<> e2.id AND e1.salary > e2.salary
ORDER BY e1.name, e2.salary;

